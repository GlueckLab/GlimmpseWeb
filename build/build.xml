<?xml version="1.0" encoding="UTF-8"?>
<!-- 
GLIMMPSE (General Linear Multivariate Model Power and Sample size)
Copyright (C) 2010 Regents of the University of Colorado.  

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 -->
<project name="Glimmpse Web Interface" default="distributions" >
	<!-- when releasing software, this is the only place the version information
			should be specified. Appropriate changes to the manifest and source
			code will be performed by the build -->
	<property name="app.version" value="dev" />
	<!-- optional suffix if we have multiple versions of the 
		web services running on the same tomcat -->
	<condition property="warfile.suffix" value="">
	   <not>  
	      <isset property=""/>
	   </not>
	</condition>
	<!-- allows user to override default version of web service 
	     common library -->
	<condition property="webservicecommon.version" value="dev">
	   <not>  
	      <isset property=""/>
	   </not>
	</condition>
	<property name="app.name" value="glimmpse-web" />
	<property name="owner" value="University of Colorado Denver, 
		Department of Biostatistics and Informatics" />
	<!-- optional Apache httpd installation directory -->
	<condition property="apache.home" value="">
	   <not>  
	      <isset property=""/>
	   </not>
	</condition>
	<!-- main properties -->
	<property name="module.name" value="edu.ucdenver.bios.glimmpseweb.GlimmpseWeb" />
    <property name="artifacts.dir" value="${basedir}/artifacts" />
    <property name="tmp.dir" value="${basedir}/tmp" />
    <property name="source.dir" value="${basedir}/../src" />
	<property name="target.dir" value="${tmp.dir}/${app.name}-${app.version}" />
	<property name="javadoc.dir" value="${tmp.dir}/${app.name}-${app.version}-javadoc" />
	<property name="thirdparty.dir" value="${basedir}/../../thirdparty" />
	<property name="gwt.dir" value="${thirdparty.dir}/gwt/2.4.0/lib" />
	<property name="gwt.visualization.dir" value="${thirdparty.dir}/gwt-visualization/1.1/lib" />
	<property name="zip.file" value="${app.name}-${app.version}-binary.zip" />
	<property name="war.dir" value="${basedir}/../war"/>
	<property name="checkstyle.dir" value="${thirdparty.dir}/checkstyle/5.3"/>
	<property name="webservicecommon.lib" 
		value="${basedir}/../../WebServiceCommon/build/artifacts/edu.ucdenver.bios.webservice.common-gwt-${webservicecommon.version}.jar" />
	
	<!-- class path -->
  	<path id="compile.path">
  		<pathelement location="${source.dir}"/>
  		<fileset dir="${gwt.dir}">
  			<include name="gwt-user.jar"/>
  			<include name="gwt-dev.jar"/>
  		</fileset>
  		<fileset file="${webservicecommon.lib}" />
  		<fileset dir="${thirdparty.dir}">
			<include name="piriti/0.8/lib/piriti-dev-0.8.jar"/>
			<include name="piriti/0.8/lib/piriti-user-0.8.jar"/>
			<include name="piriti/0.8/lib/aopalliance-1.0.jar"/>
			<include name="piriti/0.8/lib/gin-1.5.0.jar"/>
			<include name="piriti/0.8/lib/guice-3.0.jar"/>
			<include name="piriti/0.8/lib/guice-assistedinject-3.0.jar"/>
			<include name="piriti/0.8/lib/javax.inject-1.jar"/>
			<include name="piriti/0.8/lib/totoe-0.4.jar"/>
			<include name="piriti/0.8/lib/velocity-1.7.jar"/>
			<include name="smartgwt/3.0p/lib/smartgwt.jar"/>
  		</fileset>
  	</path>
	
	<!--For checkstyle -->
	<taskdef resource="checkstyletask.properties"
	         classpath="${checkstyle.dir}/checkstyle-5.3-all.jar"/>
	
	<!-- clean up files generated by the build  -->
	<target name="clean" description="deletes all generated files">
		<delete dir="${artifacts.dir}"/>
    	<delete dir="${tmp.dir}"/> 
	</target>

	<!-- create output directories  -->
	<target name="prepare" depends="clean"
		description="creates output directories">
		<mkdir dir="${artifacts.dir}"/>
    	<mkdir dir="${tmp.dir}"/> 
	    <mkdir dir="${target.dir}"/>
        <mkdir dir="${javadoc.dir}"/> 
	</target>
	
	<!-- build the app -->
  	<target name="compile.gwt" depends="prepare"
    	description="compiles Java source files to JavaScript">
  		<!-- replace the URI's for web services with appropriate
  			suffix -->
  		<replace file="${source.dir}/edu/ucdenver/bios/glimmpseweb/client/GlimmpseConstants.properties" 
  			token="_WARFILE_SUFFIX_" value="${warfile.suffix}"/>
    	<java classname="com.google.gwt.dev.Compiler" fork="true">
            <arg value="-war" />
            <arg value="${target.dir}" />
            <arg value="-style" />
            <arg value="obfuscated" />
            <arg value="${module.name}" />
            <jvmarg value="-Xmx256m" />
            <jvmarg value="-Xss64M" />
            <classpath>
                <path refid="compile.path" />
            </classpath>
    	</java>
  	</target>

	<!-- build a temporary directory with contents of the zip file-->
	<target name="copy" 
		description="Copy front-end files (static html, images, etc) to the exploded zip directory" >
		  <copy todir="${target.dir}/images">
		    <fileset dir="${war.dir}/images">
		    	<exclude name="**/**/.svn" />
		    </fileset>
		  </copy>
		  <copy todir="${target.dir}/stylesheets">
		    <fileset dir="${war.dir}/stylesheets">
		    	<exclude name="**/**/.svn" />
		    </fileset>
		  </copy>
		  <copy todir="${target.dir}">
			<fileset dir="${war.dir}">
				<include name="index.html"/>
				<include name="feedback.html"/>
				<include name="feedbackSuccess.html"/>
				<include name="feedbackError.html"/>
				<include name="formmail.php"/>
				<include name="favicon.ico"/>
			</fileset>
		  </copy>
		<!-- replace the version number in index.html -->
    	<replace file="${target.dir}/index.html" token="UNKNOWN" value="${app.version}"/>
    	<replace file="${target.dir}/feedback.html" token="UNKNOWN" value="${app.version}"/>
    	<replace file="${target.dir}/feedbackSuccess.html" token="UNKNOWN" value="${app.version}"/>
        <replace file="${target.dir}/feedbackError.html" token="UNKNOWN" value="${app.version}"/>
	</target>

	<!-- run checkstyle-->
	<target name="checkstyle"
	        description="Generates a report of code convention violations.">
		<checkstyle config="${checkstyle.dir}/glimmpse_sun_checks.xml">
		  <fileset dir="${source.dir}" includes="**/*.java"/>
		  <formatter type="plain"/>
		  <!--Save output to file:
		   <formatter type="xml" toFile="./checkstyle_errors.xml"/>-->
		</checkstyle>
	</target>
	
	<!--  deploy to local apache server -->
	<target name="deploy" description="This target moves the glimmpse.zip 
		to the user's apache.home/htdocs directory." >
		<copy todir="${apache.home}\htdocs">
			<fileset dir="${basedir}">
				<include name="glimmpse.zip"/>
			</fileset>
		</copy>
		<echo>Deployed the ${zip.file} to ${apache.home}/htdocs</echo>
	</target>
		
	<!--This is a debugging target which prints all env variable values -->
	<target name="showProperties">
		<echoproperties />
	</target>	
	
	<!-- run javadoc -->
    <target name="javadoc" description="Generates the API specification (javadoc)">
        <javadoc packagenames="edu.cudenver.bios.*"
                 access="public"
                 destdir="${javadoc.dir}"
                 use="true"
                 author="true"
                 version="true"
                 windowtitle="${owner}: GLIMMPSE Web Java API (${app.version}) Specification"
                 doctitle="${owner}: GLIMMPSE Web Java API (${app.version}) Specification">
             <fileset dir="${source.dir}" defaultexcludes="yes">
                 <include name="**/*.java"/>
            </fileset>
            <header><![CDATA[<p><b>Glimmpse Web</b></p>]]></header>
            <bottom><![CDATA[<font size=1>${owner}</font>]]></bottom>
            <link href="http://java.sun.com/javase/7/docs/api"/>
            <!-- NOTE: including the classpath here causes a javadoc failure due
                   to errors in the gwt-*.jar files, so we just need to watch the 
                   javadoc warnings go by.  Sorry for the inconvenience :-(
            <classpath>
                <path refid="compile.path"/>
            </classpath> -->
        </javadoc>
    </target>
	
	<!-- Create the binary distribution -->
	<target name="distribution.binary" depends="compile.gwt,copy,javadoc"
	  description="builds the zip file">
	  <delete file="${artifacts.dir}/${zip.file}"/>
		<zip destfile="${artifacts.dir}/${zip.file}"  >
			<zipfileset dir="${target.dir}" />	
			<zipfileset file="${basedir}/../LICENSE-gpl2.0.txt"/>
		    <zipfileset file="${basedir}/../README.txt"/>
		</zip>
	</target>
	
	<!-- Create the javadoc distribution  -->	
	<target name="distribution.javadoc" >
		<zip destfile="${artifacts.dir}/${app.name}-${app.version}-javadoc.zip" >
			<zipfileset dir="${javadoc.dir}" />
			<zipfileset file="${basedir}/../LICENSE-gpl2.0.txt"/>
		    <zipfileset file="${basedir}/../README.txt"/>
		</zip>
	</target>
	
	<!-- Create the source distribution -->
	<target name="distribution.source">
		<zip destfile="${artifacts.dir}/${app.name}-${app.version}-source.zip"  >
			<zipfileset dir="${basedir}/../.."  			
				includes="GlimmpseWeb/*,
				GlimmpseWeb/build/build.xml,
				GlimmpseWeb/src/**,
				GlimmpseWeb/text/**,
				GlimmpseWeb/war/**" />	
			<zipfileset file="${basedir}/../LICENSE-gpl2.0.txt"/>
		    <zipfileset file="${basedir}/../README.txt"/>
		</zip>
	</target>
	
	<!-- build all distributions -->
	<target name="distributions" 
		depends="distribution.binary,
		distribution.javadoc,
		distribution.source"/>

	<!-- full build then deploy to apache server -->
	<target name="buildDeploy" depends="distributions, deploy"/>
	
</project>